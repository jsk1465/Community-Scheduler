{"version":3,"sources":["../../src/rules/checkIndentation.js"],"names":["sourceCode","jsdocNode","report","reg","RegExp","text","getText","test","lineBreaks","slice","lastIndex","match","line","length","iterateAllJsdocs","meta","type"],"mappings":";;;;;;;AAAA;;;;eAEe,2BAAa,CAAC;AAC3BA,EAAAA,UAD2B;AAE3BC,EAAAA,SAF2B;AAG3BC,EAAAA;AAH2B,CAAD,KAItB;AACJ,QAAMC,GAAG,GAAG,IAAIC,MAAJ,CAAW,gCAAX,CAAZ;AACA,QAAMC,IAAI,GAAGL,UAAU,CAACM,OAAX,CAAmBL,SAAnB,CAAb;;AAEA,MAAIE,GAAG,CAACI,IAAJ,CAASF,IAAT,CAAJ,EAAoB;AAClB,UAAMG,UAAU,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcN,GAAG,CAACO,SAAlB,EAA6BC,KAA7B,CAAmC,KAAnC,KAA6C,EAAhE;AACAT,IAAAA,MAAM,CAAC,+BAAD,EAAkC,IAAlC,EAAwC;AAC5CU,MAAAA,IAAI,EAAEJ,UAAU,CAACK;AAD2B,KAAxC,CAAN;AAGD;AACF,CAdc,EAcZ;AACDC,EAAAA,gBAAgB,EAAE,IADjB;AAEDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF;AAFL,CAdY,C","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  sourceCode,\n  jsdocNode,\n  report,\n}) => {\n  const reg = new RegExp(/^(?:\\/?\\**|[ \\t]*)\\*[ \\t]{2}/gm);\n  const text = sourceCode.getText(jsdocNode);\n\n  if (reg.test(text)) {\n    const lineBreaks = text.slice(0, reg.lastIndex).match(/\\n/g) || [];\n    report('There must be no indentation.', null, {\n      line: lineBreaks.length,\n    });\n  }\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    type: 'layout',\n  },\n});\n"],"file":"checkIndentation.js"}